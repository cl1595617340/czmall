<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bdqn.springboot.dao.GoodstypeMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.bdqn.springboot.entity.Goodstype">
        <id column="goodstype_id" property="goodstypeId" />
        <result column="goodstype_name" property="goodstypeName" />
        <result column="goodstype_state" property="goodstypeState" />

        <collection  property="goodstype2" ofType="com.bdqn.springboot.entity.Goodstype2">
            <id column="g2_id" property="goodstype2Id"></id>
            <result column="g2_name" property="goodstype2Name"></result>
            <result column="g2_state" property="goodstype2State"></result>


            <collection property="goodstype3" ofType="com.bdqn.springboot.entity.Goodstype3">
                <id column="g3_id" property="goodstype3Id"></id>
                <result column="g3_name" property="goodstype3Name"></result>
                <result column="g3_state" property="goodstype3State"></result>
                <result column="g3_picture" property="goodstype3Picture"></result>
            </collection>
        </collection>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        goodstype_id, goodstype_name, goodstype_state
    </sql>


    <select id="getGoodstype" resultMap="BaseResultMap">
SELECT g1.*,g2.goodstype2_id g2_id,g2.goodstype2_name g2_name,g2.goodstype2_state g2_state,g3.goodstype3_id g3_id,g3.goodstype3_name g3_name,g3.goodstype3_state g3_state  ,g3.goodstype3_picture g3_picture FROM goodstype g1
LEFT JOIN goodstype2 g2 ON (g2.goodstype_id = g1.goodstype_id)
LEFT JOIN goodstype3 g3 ON (g3.goodstype2_id = g2.goodstype2_id)
    </select>

    <select id="getGoodstype2List" resultType="com.bdqn.springboot.entity.Goodstype2">
SELECT * FROM goodstype2 g2
JOIN goodstype g ON (g2.goodstype_id = g.goodstype_id)
WHERE g.goodstype_id = #{id}

    </select>


    <select id="getGoodstypeBy2" resultType="com.bdqn.springboot.entity.Goodstype">
SELECT * FROM goodstype2
JOIN goodstype ON (goodstype2.goodstype_id = goodstype.`goodstype_id`)
WHERE goodstype2_id = #{id}
    </select>

    <select id="getGoodstype2By3" resultType="com.bdqn.springboot.entity.Goodstype2">
SELECT * FROM goodstype3
JOIN goodstype2 ON (goodstype3.`goodstype2_id` = goodstype2.`goodstype2_id`)
WHERE goodstype3_id = #{id}
    </select>

    <update id="updateDescendantBy2">
        UPDATE goodstype2
        <set>
            <if test="state!=null">
                goodstype2_state = #{state},
            </if>
        </set>
        WHERE goodstype_id = #{id}
    </update>

    <update id="updateDescendantBy3">
        UPDATE goodstype3
        <set>
            <if test="state!=null">
                goodstype3_state = #{state},
            </if>
        </set>
        WHERE goodstype2_id = #{id}
    </update>

    <!--  /*修改1级分类下所有的3级分类状态，要拿他所有2级分类的id，所以要用数组批量修改*/-->
    <update id="updateType3AllDescendant">
        update goodstype3
        <set>
            <if test="state!=null">
                goodstype3_state = ${state},
            </if>
        </set>
        where goodstype2_id in
        <foreach item="ids" collection="ids" index="no" open="(" separator="," close=")">
            #{ids}
        </foreach>
    </update>

    <!-- ================================================================项目前台的接口==== -->
    <select id="getAllGoodsTypeByF" resultType="com.bdqn.springboot.entity.Goodstype">
SELECT * FROM goodstype WHERE goodstype_state = 0
    </select>

    <select id="getGoodstypeTo23ByF" resultMap="BaseResultMap">
    SELECT g1.*,g2.goodstype2_id g2_id,g2.goodstype2_name g2_name,g2.goodstype2_state g2_state  ,g3.goodstype3_id g3_id,g3.goodstype3_name g3_name,g3.goodstype3_state g3_state,g3.goodstype3_picture g3_picture FROM goodstype g1
JOIN goodstype2 g2 ON (g2.goodstype_id = g1.goodstype_id)
JOIN goodstype3 g3 ON (g3.goodstype2_id = g2.goodstype2_id)
WHERE g1.goodstype_id = #{id}
    </select>
</mapper>
